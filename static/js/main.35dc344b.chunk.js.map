{"version":3,"sources":["App.js","index.js"],"names":["apiUrl","process","apiToken","Styles","styled","div","_templateObject","_taggedTemplateLiteral","Table","_ref","columns","data","isSearch","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","state","setGlobalFilter","useTable","useGlobalFilter","React","createElement","Fragment","type","placeholder","value","globalFilter","onChange","e","target","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","i","getRowProps","cells","cell","getCellProps","App","users","setUsers","useState","record","setRecord","searchQuery","setSearchQuery","totalUsers","setTotalUsers","useEffect","fetchUsers","fetchDailyRecord","url","concat","fetch","method","Content-Type","Authorization","then","response","json","parsedData","user","number","indexOf","uuid","name","gender","age","location","meta","total","catch","err","console","log","message","date","moment","format","male_count","female_count","male_avg_age","female_avg_age","total_count","dailyRecords","useMemo","Header","accessor","Cell","_ref2","onClick","handleDelete","original","ok","Error","error","_ref3","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.35dc344b.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components'\nimport { useTable, useGlobalFilter } from 'react-table';\nimport moment from 'moment-timezone';\n\nconst apiUrl = process.env.REACT_APP_BACKEND_URL;\nconst apiToken = process.env.REACT_APP_BACKEND_TOKEN;\nconst Styles = styled.div`\n  padding: 1rem;\n\n  table {\n    border-spacing: 0;\n    border: 1px solid black;\n\n    tr {\n      :last-child {\n        td {\n          border-bottom: 0;\n        }\n      }\n    }\n\n    th,\n    td {\n      margin: 0;\n      padding: 0.5rem;\n      border-bottom: 1px solid black;\n      border-right: 1px solid black;\n\n      :last-child {\n        border-right: 0;\n      }\n    }\n  }\n`\n\nfunction Table({ columns, data ,isSearch}) {\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n    state,\n    setGlobalFilter,\n  } = useTable(\n    {\n      columns,\n      data,\n    },\n    useGlobalFilter // Use global filter hook\n  );\n  // Render the UI for your table\n  return (\n    <>\n      {isSearch && ( // Render search input if isSearch is true\n        <input\n          type=\"text\"\n          placeholder=\"Search...\"\n          value={state.globalFilter || ''}\n          onChange={(e) => setGlobalFilter(e.target.value)}\n        />\n      )}\n      {/* Table */}\n      <table {...getTableProps()}>\n        <thead>\n          {headerGroups.map((headerGroup) => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map((column) => (\n                <th {...column.getHeaderProps()}>{column.render('Header')}</th>\n              ))}\n            </tr>\n          ))}\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {rows.map((row, i) => {\n            prepareRow(row);\n            return (\n              <tr {...row.getRowProps()}>\n                {row.cells.map((cell) => {\n                  return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>;\n                })}\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </>\n  );\n}\n\nfunction App() {\n  const [users, setUsers] = useState([]);\n  const [record, setRecord] = useState([]);\n  const [searchQuery, setSearchQuery] = useState(null);\n  const [totalUsers, setTotalUsers] = useState(0);\n\n\n  useEffect(() => {\n    fetchUsers(searchQuery); // Fetch users with the initial search query\n    fetchDailyRecord()\n  }, [searchQuery]);\n\n\n  const fetchUsers = (searchQuery) => {\n    let url =  `${apiUrl}/api/users`;\n    if (searchQuery !== null) {\n      // Update API endpoint to include search query only if it's not null\n      url += `?search=${searchQuery}`;\n    }\n    fetch(url,{\n      method: 'GET', // or any other HTTP method\n      headers: {\n        // Add your request headers here\n        'Content-Type': 'application/json',\n        'Authorization': apiToken, // Example of accessing Authorization header\n        // Add more headers if needed\n      },\n    })\n    .then((response) => response.json())\n    .then((data) => {\n\n      const parsedData = data.data.map((user) => ({\n        number: data.data.indexOf(user) + 1,\n        uuid: user.uuid,\n        name: user.name,\n        gender: user.gender,\n        age: user.age,\n        location: user.location\n      }))\n       setUsers(parsedData)\n       setTotalUsers(data.meta.total); // Update total users\n\n    })\n    .catch((err) => {\n       console.log(err.message);\n    });\n  }\n\n  const fetchDailyRecord = () => {\n    fetch( `${apiUrl}/api/daily-record`,{\n        method: 'GET', // or any other HTTP method\n        headers: {\n          // Add your request headers here\n          'Content-Type': 'application/json',\n          'Authorization': apiToken, // Example of accessing Authorization header\n          // Add more headers if needed\n        },\n    })\n    .then((response) => response.json())\n    .then((data) => {\n      const parsedData = data.data.map((record) => ({\n        uuid: record.uuid,\n        date: moment(record.date).format('llll'),\n        male_count: record.male_count,\n        female_count: record.female_count,\n        male_avg_age: record.male_avg_age,\n        female_avg_age: record.female_avg_age,\n        total_count: record.male_count + record.female_count\n      }))\n       setRecord(parsedData);\n    })\n    .catch((err) => {\n       console.log(err.message);\n    });\n  }\n\n\n  const dailyRecords = React.useMemo(\n    () => [\n      {\n        Header: 'Daily Record',\n        columns: [\n          {\n            Header: 'Date',\n            accessor: 'date',\n          },\n        ],\n      },\n      {\n        Header: 'Male',\n        columns: [\n          {\n            Header: 'Count',\n            accessor: 'male_count',\n          },\n          {\n            Header: 'Avg Age',\n            accessor: 'male_avg_age',\n          },\n        ],\n      },\n      {\n        Header: 'Female',\n        columns: [\n          {\n            Header: 'Count',\n            accessor: 'female_count',\n          },\n          {\n            Header: 'Avg Age',\n            accessor: 'female_avg_age',\n          },\n        ],\n      },\n      {\n        Header: 'Total Count',\n        columns: [\n          {\n            Header: 'Count',\n            accessor: 'total_count',\n          },\n        ],\n      },\n\n\n    ],\n    []\n  )\n  const columns = React.useMemo(\n    () => [\n      {\n            Header: 'No',\n            accessor: 'number',\n          },\n          {\n            Header: 'Name',\n            accessor: 'name',\n          },\n          {\n            Header: 'Age',\n            accessor: 'age',\n          },\n          {\n            Header: 'Gender',\n            accessor: 'gender',\n          },\n          {\n            Header: 'Location',\n            accessor: 'location',\n          },\n          {\n            Header: 'Action',\n            accessor: 'delete',\n            Cell: ({ row }) => (\n              <button onClick={() => handleDelete(row.original.uuid)}>Delete</button>\n            ),\n  \n          },\n\n    ],\n    []\n  )\n\n  function TotalUsers({ totalUsers }) {\n    return (\n      <div>\n        <p>Total Users: {totalUsers}</p>\n      </div>\n    );\n  }\n  \n  \n  const handleDelete = (uuid) => {\n    // Handle delete action\n    console.log(uuid)\n      fetch(`${apiUrl}/api/users/${uuid}`, {\n        method: 'DELETE',\n        headers: {\n          // Add your request headers here\n          'Content-Type': 'application/json',\n          'Authorization': apiToken, // Example of accessing Authorization header\n          // Add more headers if needed\n        },\n      })\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        // If the response is successful, perform any necessary actions\n        console.log('User deleted successfully');\n        fetchUsers(null)\n        fetchDailyRecord()\n\n        // You may want to update the UI or state here\n      })\n      .catch((error) => {\n        console.error('There was a problem with the fetch operation:', error);\n        // Handle any errors that occurred during the fetch\n      });\n    };\n  \n  return (\n    <Styles>\n      <Table columns={dailyRecords} data={record} />\n      <TotalUsers totalUsers={totalUsers} />\n      <Table columns={columns} data={users} isSearch={true}/>\n    </Styles>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}