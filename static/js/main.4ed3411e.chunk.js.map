{"version":3,"sources":["App.js","index.js"],"names":["apiUrl","process","Styles","styled","div","withConfig","displayName","componentId","Table","_ref","columns","data","isSearch","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","state","setGlobalFilter","useTable","useGlobalFilter","React","createElement","Fragment","type","placeholder","value","globalFilter","onChange","e","target","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","i","getRowProps","cells","cell","getCellProps","App","users","setUsers","useState","record","setRecord","searchQuery","setSearchQuery","totalUsers","setTotalUsers","useEffect","fetchUsers","fetchDailyRecord","url","concat","fetch","then","response","json","parsedData","user","number","indexOf","uuid","firstName","JSON","parse","name","first","lastName","last","gender","age","location","length","catch","err","console","log","message","dailyRecords","useMemo","Header","accessor","Cell","_ref2","onClick","handleDelete","original","method","ok","Error","error","_ref3","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.4ed3411e.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components'\nimport { useTable, useGlobalFilter } from 'react-table';\n\nconst apiUrl = process.env.REACT_APP_BACKEND_URL;\nconst Styles = styled.div`\n  padding: 1rem;\n\n  table {\n    border-spacing: 0;\n    border: 1px solid black;\n\n    tr {\n      :last-child {\n        td {\n          border-bottom: 0;\n        }\n      }\n    }\n\n    th,\n    td {\n      margin: 0;\n      padding: 0.5rem;\n      border-bottom: 1px solid black;\n      border-right: 1px solid black;\n\n      :last-child {\n        border-right: 0;\n      }\n    }\n  }\n`\n\nfunction Table({ columns, data ,isSearch}) {\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n    state,\n    setGlobalFilter,\n  } = useTable(\n    {\n      columns,\n      data,\n    },\n    useGlobalFilter // Use global filter hook\n  );\n  // Render the UI for your table\n  return (\n    <>\n      {isSearch && ( // Render search input if isSearch is true\n        <input\n          type=\"text\"\n          placeholder=\"Search...\"\n          value={state.globalFilter || ''}\n          onChange={(e) => setGlobalFilter(e.target.value)}\n        />\n      )}\n      {/* Table */}\n      <table {...getTableProps()}>\n        <thead>\n          {headerGroups.map((headerGroup) => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map((column) => (\n                <th {...column.getHeaderProps()}>{column.render('Header')}</th>\n              ))}\n            </tr>\n          ))}\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {rows.map((row, i) => {\n            prepareRow(row);\n            return (\n              <tr {...row.getRowProps()}>\n                {row.cells.map((cell) => {\n                  return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>;\n                })}\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </>\n  );\n}\n\nfunction App() {\n  const [users, setUsers] = useState([]);\n  const [record, setRecord] = useState([]);\n  const [searchQuery, setSearchQuery] = useState(null);\n  const [totalUsers, setTotalUsers] = useState(0);\n\n\n  useEffect(() => {\n    fetchUsers(searchQuery); // Fetch users with the initial search query\n    fetchDailyRecord()\n  }, [searchQuery]);\n\n\n  const fetchUsers = (searchQuery) => {\n    let url =  `${apiUrl}/api/users`;\n    if (searchQuery !== null) {\n      // Update API endpoint to include search query only if it's not null\n      url += `?search=${searchQuery}`;\n    }\n    fetch(url)\n    .then((response) => response.json())\n    .then((data) => {\n\n      const parsedData = data.data.map((user) => ({\n        number: data.data.indexOf(user) + 1,\n        uuid: user.uuid,\n        firstName: JSON.parse(user.name).first,\n        lastName: JSON.parse(user.name).last,\n        gender: user.gender,\n        age: user.age,\n        location: user.location,\n      }));\n       setUsers(parsedData);\n       setTotalUsers(parsedData.length); // Update total users\n\n    })\n    .catch((err) => {\n       console.log(err.message);\n    });\n  }\n\n  const fetchDailyRecord = () => {\n    fetch( `${apiUrl}/api/daily-record`)\n    .then((response) => response.json())\n    .then((data) => {\n       setRecord([data.data]);\n    })\n    .catch((err) => {\n       console.log(err.message);\n    });\n  }\n\n\n  const dailyRecords = React.useMemo(\n    () => [\n      {\n        Header: 'Daily Record',\n        columns: [\n          {\n            Header: 'Date',\n            accessor: 'date',\n          },\n        ],\n      },\n      {\n        Header: 'Male',\n        columns: [\n          {\n            Header: 'Count',\n            accessor: 'male_count',\n          },\n          {\n            Header: 'Avg Age',\n            accessor: 'male_avg_age',\n          },\n        ],\n      },\n      {\n        Header: 'Female',\n        columns: [\n          {\n            Header: 'Count',\n            accessor: 'female_count',\n          },\n          {\n            Header: 'Avg Age',\n            accessor: 'female_avg_age',\n          },\n        ],\n      },\n\n    ],\n    []\n  )\n  const columns = React.useMemo(\n    () => [\n      {\n        Header: 'Name',\n        columns: [\n          {\n            Header: 'No',\n            accessor: 'number',\n          },\n          {\n            Header: 'First Name',\n            accessor: 'firstName',\n          },\n          {\n            Header: 'Last Name',\n            accessor: 'lastName',\n          },\n        ],\n      },\n      {\n        Header: 'Info',\n        columns: [\n          {\n            Header: 'Age',\n            accessor: 'age',\n          },\n          {\n            Header: 'Gender',\n            accessor: 'gender',\n          },\n          {\n            Header: 'Location',\n            accessor: 'location',\n          },\n          {\n            Header: 'Action',\n            accessor: 'delete',\n            Cell: ({ row }) => (\n              <button onClick={() => handleDelete(row.original.uuid)}>Delete</button>\n            ),\n  \n          },\n\n        ],\n      },\n    ],\n    []\n  )\n\n  function TotalUsers({ totalUsers }) {\n    return (\n      <div>\n        <p>Total Users: {totalUsers}</p>\n      </div>\n    );\n  }\n  \n  \n  const handleDelete = (uuid) => {\n    // Handle delete action\n    console.log(uuid)\n      fetch(`http://127.0.0.1:8000/api/users/${uuid}`, {\n        method: 'DELETE',\n      })\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        // If the response is successful, perform any necessary actions\n        console.log('User deleted successfully');\n        fetchUsers(null)\n        fetchDailyRecord()\n\n        // You may want to update the UI or state here\n      })\n      .catch((error) => {\n        console.error('There was a problem with the fetch operation:', error);\n        // Handle any errors that occurred during the fetch\n      });\n    };\n  \n  return (\n    <Styles>\n      <Table columns={dailyRecords} data={record} />\n      <TotalUsers totalUsers={totalUsers} />\n      <Table columns={columns} data={users} isSearch={true}/>\n    </Styles>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}